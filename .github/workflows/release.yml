name: Release

# This workflow is triggered on pushing a tag BE CAREFUL this application AUTO UPDATES !!! 
# git tag vX.Y.Z
# git push origin tag vX.Y.Z

on:
    push:
        tags:
            - 'v*.*.*'

jobs:
    release-middleware:
        runs-on: "ubuntu-latest"
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v4
              with:
                python-version: "3.10"
            - uses: actions/checkout@master
            - uses: actions/setup-python@v3
              with:
                python-version: "3.10"
            - name: Install dependencies
              run: |
                sudo apt-get update
                sudo apt-get autoremove
                sudo apt-get autoclean
                python -m pip install --upgrade pip
                pip install poetry twine
            - name: Build wheels and source tarball
              run: |
                poetry build
            - name: Publish Olas Operate Middleware
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                user: __token__
                password: ${{ secrets.PYPI_TOKEN }}
                skip-existing: true
                packages-dir: dist/
    release-operate:
        runs-on: macos-latest
        needs:
          - "release-middleware"
        steps:           
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v4
              with:
                python-version: "3.10"
            - uses: actions/setup-node@v1
              with:
                node-version: "20.11"
            - name: Download binary
              run: mkdir electron/bins && curl -L -o electron/bins/pearl_arm64 https://tempfileserver.staging.autonolas.tech/pearl_arm64 && chmod +x electron/bins/pearl_arm64 && curl -L -o electron/bins/pearl_x64 https://tempfileserver.staging.autonolas.tech/pearl_arm64 && chmod +x electron/bins/pearl_x64
            - uses: snok/install-poetry@v1
              with:
                version: "1.7.1"
                virtualenvs-create: true
                virtualenvs-in-project: false
                virtualenvs-path: ~/my-custom-path
                installer-parallel: true
            -   run: yarn install-deps
            -   name: "Build frontend with env vars"
                run: yarn build:frontend
                env: 
                    NODE_ENV: production
                    DEV_RPC: https://rpc-gate.autonolas.tech/gnosis-rpc/
                    IS_STAGING: ${{ github.ref != 'refs/heads/main' && 'true' || 'false' }}
                    FORK_URL: https://rpc-gate.autonolas.tech/gnosis-rpc/            
            - name: "Build, notarize, publish"
              env:
                APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLEIDPASS }}
                APPLE_ID: ${{ secrets.APPLEID }}
                APPLETEAMID: ${{ secrets.APPLETEAMID }}
                CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
                CSC_LINK: ${{ secrets.CSC_LINK }}
                GH_TOKEN: ${{ secrets.github_token}}
                NODE_ENV: production
                DEV_RPC: https://rpc-gate.autonolas.tech/gnosis-rpc/
                FORK_URL: https://rpc-gate.autonolas.tech/gnosis-rpc/
              run: node build.js