name: Feature Release Trigger

on:
  push:
    branches:
      - 'release/v*'

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push a tag
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      
      - name: Extract version from branch name
        id: get_version
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          VERSION=$(echo $BRANCH_NAME | sed 's/release\/v//')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Update package.json version
        run: |
          jq ".version = \"${{ steps.get_version.outputs.VERSION }}\"" package.json > tmp.json && mv tmp.json package.json
      
      - name: Update pyproject.toml version
        run: |
          sed -i -E "s/^version = \".*\"/version = \"${{ steps.get_version.outputs.VERSION }}\"/" pyproject.toml
          
      - name: Commit and push version changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add package.json pyproject.toml
          git commit -m "chore: update version to ${{ steps.get_version.outputs.VERSION }}" || echo "No changes to commit"
          git push

      - name: Create and push Git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="v${{ steps.get_version.outputs.VERSION }}"
          
          # Delete existing tag if it exists (for re-releases)
          git tag -d "$TAG_NAME" || true
          git push origin --delete "$TAG_NAME" || true
          
          # Create and push the new tag
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"